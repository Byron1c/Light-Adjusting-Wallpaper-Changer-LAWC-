using LAWC.Common;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace LAWCold
{
    static class Program
    {
        /// <summary>
        /// The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main(string[] args, int temp)
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            

            Application.SetUnhandledExceptionMode(UnhandledExceptionMode.CatchException);
            
            // set higher priority
            Process.GetCurrentProcess().PriorityBoostEnabled = true;
            Process.GetCurrentProcess().PriorityClass = ProcessPriorityClass.Normal;
            // Of course this only affects the main thread rather than child threads.
            Thread.CurrentThread.Priority = MainFunctions.threadPriority;            

            // do this before creating Main Form as the loading screen will be displayed unnecessarily
            if (SingleApplication.IsAlreadyRunning())
            {
                LAWC.NativeMethods.SendNotifyMessage(
                    (IntPtr)LAWC.NativeMethods.HWND_BROADCAST,
                    SingleApplication.WMSHOWFIRSTINSTANCE,
                    IntPtr.Zero,
                    IntPtr.Zero);

                //WinApi.PostMessage(
                //    (IntPtr)WinApi.HWND_BROADCAST,
                //    SingleInstance.SingleApplication.WM_SHOWFIRSTINSTANCE,
                //    IntPtr.Zero,
                //    IntPtr.Zero);

                //set focus on previously running app
                SingleApplication.SwitchToCurrentInstance();

                return;
            }
            

            //Application.ThreadException += Application_ThreadException;
            //AppDomain.CurrentDomain.UnhandledException += CurrentDomain_UnhandledException;

            //FrmMain f = new FrmMain();
            //Application.Run(f);



            //Application.Run(new FrmMain());


            //TODO: enable the try catch
            try
            {
                //Application.Run(new FrmMain(args));
                Application.Run(new LAWC.frmShowText());
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.InnerException.Message + "\n\n\n\n" + ex.Message);
                MessageBox.Show("Well, this is embarassing. Something went wrong... \n\n"
                    + "Try starting up LAWC again. Also check the Error Log (in Advanced Settings)\n\n"
                    + "Error: " + ex.Message.ToString(CultureInfo.InvariantCulture) + "\n\n" + ex.StackTrace.ToString(CultureInfo.InvariantCulture) + "\n\n" + ex.Source.ToString(CultureInfo.InvariantCulture),
                    "LAWC Crashed", MessageBoxButtons.OK, MessageBoxIcon.Error);
                throw;
                

            }


        }

        //private static void CurrentDomain_UnhandledException(object sender, UnhandledExceptionEventArgs e)
        //{
        //    throw new NotImplementedException();
        //}

        //private static void Application_ThreadException(object sender, ThreadExceptionEventArgs e)
        //{
        //    throw new NotImplementedException();
        //}

        //[STAThread]
        //static void Main()
        //{

        //    if (!SingleInstanceWinApi.Start())
        //    {
        //        SingleInstanceWinApi.ShowFirstInstance();
        //        return;
        //    }

        //    Application.EnableVisualStyles();
        //    Application.SetCompatibleTextRenderingDefault(false);

        //    try
        //    {
        //        frmMain mainForm = new frmMain();
        //        Application.Run(mainForm);
        //    }
        //    catch (Exception e)
        //    {
        //        MessageBox.Show(e.Message);
        //    }

        //    SingleInstanceWinApi.Stop();
        //}
    }
}
